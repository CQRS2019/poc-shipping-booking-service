server:
  servlet:
    context-path: /command/bookings
  port: ${PORT:8082}

spring:
  kafka:
    consumer:
      bootstrapServers: 192.168.99.100:9092 #146.222.43.12:9092
    producer:
      bootstrapServers: 192.168.99.100:9092 #146.222.43.12:9092
    admin:
      bootstrapServers: 192.168.99.100:9092 #146.222.43.12:9092
    streams:
      bootstrapServers: 192.168.99.100:9092 #146.222.43.12:9092
    bootstrapServers: 192.168.99.100:9092
  application:
    name: bookings_service_command
  cloud:
    stream:
      bindings:
        output:
          destination: bookings-events-t
          producer.headerMode: headers
          contentType: application/json
          producer.partition-count: 1
        input:
          destination: bookings-events-t
          consumer.headerMode: headers
          contentType: application/json
          group: bookings-events-group
      kafka:
        streams:
          binder:
            configuration:
              state.dir: d:\\temp\\
              commit.interval.ms: 1000
              serdeError: logAndContinue
              default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
              default.value.serde: org.apache.kafka.common.serialization.Serdes$BytesSerde
              application.server: 192.168.99.100:${PORT:8082}
        binder:
          brokers: 192.168.99.100:9092
          headers: event_type,kafka_messageKey
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false


